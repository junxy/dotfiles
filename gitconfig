
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = green bold
    local = green
    remote = red bold
[color "diff"]
    meta = blue bold
    frag = magenta bold
    old = red bold
    new = green bold
 #[color "status"]
 #   added = blue
 #   changed = green
 #   untracked = cyan


[user]
  	email = alexis.midon@c3-carbon.com
  	name = Alexis Midon

[core]
    excludesfile = /home/alexis/.gitignore
    editor = vim

[apply]
      whitespace = fix

[merge]
    log = true

[help]
    autocorrect = 1

[branch]
    autosetupmerge = true

[alias]
    ci = commit
    co = checkout
    st = status
    br = branch
    sh = show
    # show difference between the HEAD and the index
    staged = diff --cached
    stg = diff --cached
    # show difference between working tree and the index
    unstaged = diff
    # show staged and unstaged changes (what would be committed with "git commit -a")
    both = diff HEAD
    dh = diff HEAD
    # quick access to oneline log format         
    ol = log --date=relative --pretty=format:'%Cred%h %C(yellow)%d %Cblue%ar %Creset%s %Cgreen%an'
    gr = log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s%Cgreen %cr%Creset, %Cgreen%an'
    # some rebase sugar
    pure = pull --rebase
    pp = !git pull --rebase && git push
    reb = rebase
    rebi = rebase -i
    rebc = rebase --continue
    reba = rebase --abort

[push]
	default = tracking

[diff]
    # Tells git to detect renames. If set to any boolean value, it will enable basic rename detection.
    # If set to "copies" or "copy", it will detect copies, as well.
    renames = copies
    # a prefix pair that is different from the standard "a/" and "b/"
    mnemonicprefix = true
