#####################################################################
## B A S H / S H E L L   F U
#####################################################################
http://www.ukuug.org/events/linux2003/papers/bash_tips/

# shortcuts
C-k: delete ('kill') from cursor position to the end of the line
C-u: delete from cursor position to the beginning of the line
M-d: delete from cursor position to the end of the current 'word'
C-w: delete from cursor position to the beginning of the current 'word'
C-a: move cursor to the first character of the line
C-e: move cursor beyond the last character of the line
M-a: move cursor to the first character of the current 'word'
M-e: move cursor to the last character of the current 'word'
C-y: insert latest deleted 'word'
M-.: Yank the last argument to the previous command.
M-C-y: Yank the first argument to the previous command.

# loging with a user that does not have a shel, typically a service account
su -s /bin/bash jenkins

# Ngrep, Netcat, Sshuttle, Siege, Mitmproxy
# http://coding.smashingmagazine.com/2012/10/29/powerful-command-line-tools-developers/

# fix line endings
sed 's/\x0D/\x0A/g' file

# replace the 2nd occurence and on
# 'zeline REPLACE_ME REPLACE_ME REPLACE_ME' will become 'zeline REPLACE_ME '
sed '/zeline/s|REPLACE_ME||2g' /zefile
    
# append a character
echo 'a,b,c' | sed 's/$/,/'

# Save a file you edited in vim without the needed permissions
:w !sudo tee %

# print Nth line of file
sed '42q;d' file

# remove Nth line of file
sed '3d' fileName.txt

# monitor a file and execute a command on changes
while true ; do
   inotifywait  -e modify myfile.txt && (somecommand);
done

# truncate an open file
sudo cat /dev/null > foo.txt

# join array with a separator (how would you remove the leading separator?)
R=(box{01..04}.c3-e.com)
echo $(printf ",%s" "${R[@]}")

# count number of occurences using awk
grep pattern zk3.log | cut -d'/' -f5-6 |  awk '{count[$1]++}END{for(j in count) print j,count[j]}'
# or with an input file:
awk '{count[$1]++}END{for(j in count) print j,"("count[j]" pattern)"}' FS=: resVI.txt

#  How to prepare commands and execute them with 'su' in one go
COMMANDS=$(cat <<EOS
echo 'bar'
EOS
)
su - john -c "$COMMANDS"

# mtr - traceroute and ping combined
mtr google.com

# Find the last command that begins with "whatever," but avoid running it
!whatever:p

# Copy your public-key to remote-machine for public-key authentication
ssh-copy-id remote-machine 
# same as:
ssh remote-machine 'cat >> .ssh/authorized_keys' < .ssh/identity.pub

# Globally search replace on the previous line
!!:gs/old/new/

# Extract the %pre and %post script out of the binary rpm ?
rpm -qp --scripts some_package.rpm >wherever #Replace '--scripts' with '--triggers' if you want the later.

# loops 
for file in ${files[@]} do echo $file ; done
for f in `ls | grep -v "\.sh$"`; { mv ${f} ${f}.sh; }
for f in *.AVI; { mv -v "$f" "Tom_Sawyer-$n.avi"; ((n = n + 1));}

# Other bits of previous commands can be grabbed with !
   !:0 is the previous command name
   !^, !:2, !:3, ?, !$ are the arguments
   !* is all the arguments
   !-2, !-3, ? are earlier commands
   !-2^, !-2:2, !-2$, !-2*
   So can have things like$ !-2:0 -R !^ !-3:2 but looks like nonsense. A brave person who presses Enter

# Get the Linux distribution info
lsb_release -a

# /tmp clean up frequency
TMPTIME in /etc/default/rcS

# find which IntelliJ modules is using a given jar
find . -type f -regex '.*.iml' | xargs -t -I{} cat {} | grep log4j

# zk 4-letter words
echo ruok | nc localhost 2181

# mount an iso file
sudo mount -o loop /home/USER/file.iso /media/iso

# mount a network drive
sudo mount -t cifs //192.168.1.104/Volume_1 vol1/ -o username=admin 

# restart network manager
/etc/dbus-1/event.d/25NetworkManager 

# topmost executed commands
history|awk '{print $2}'|sort|uniq -c|sort -rn|head

# use pipe in xargs
crazy | stuff | xargs -i {} sh -c “this {} | that {}”

# ssh tunnel
sudo ssh -i /home/alexis/.ssh/id_rsa -l alexis_midon -L 80:192.168.1.141:80 cvs.calypso.com cat -

# Resize image with ImageMagick/Mogrify
mogrify -resize 50% rose.jpg
mogrify -resize x600">" *.jpg
mogrify -resize 1024">" *.jpg

# list bash options
set -o

# generate random content
http://www.skorks.com/2010/03/how-to-quickly-generate-a-large-file-on-the-command-line-with-linux/

#####################################################################
## G I T  F U
#####################################################################

# remove a file from the repository, but keep it in your working directory
git rm --cached <file>

# remove a file from history
git filter-branch -f --index-filter 'git rm -r --cached --ignore-unmatch filename' master..HEAD

# To see a list of which commits are on one branch but not another
# ^ excludes the commit/branch
git log oldbranch ^newbranch --no-merges

#####################################################################
## S P L U N K  F U
#####################################################################

# extract field with regex
yoursearchhere | rex field=_raw "InetAddress /(?<deadIp>[\d\.]+) .* dead"

eventtype=c3event e_phase=broker |stats max(e_pcdiff) perc90(e_pcdiff)
eventtype=c3event e_phase=broker |timechart perc5(e_pcdiff) avg(e_pcdiff) perc95(e_pcdiff) count
eventtype=status_logger poolName!=NULL|eval x=host."/".poolName|timechart sum(pending) by x

# disk usage
index="os"source="df"hostPart | multikv fields UsePct, MountedOn | search MountedOn= some criteria | timechart span="5m"avg(UsePct) by host

